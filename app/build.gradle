apply plugin: 'com.android.application'

def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
localProperties.load(new FileInputStream(localPropertiesFile))

def marvelApiPrivateKey = localProperties['privateMarvelApiKey']
def marvelApiPublicKey = localProperties['publicMarvelApiKey']

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "jmlb0003.com.marveleando"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildTypes.each {
        it.buildConfigField 'String', 'MARVEL_API_BASE_URL', '"http://gateway.marvel.com/"'
        it.buildConfigField 'String', 'MARVEL_API_PRIVATE_KEY', marvelApiPrivateKey
        it.buildConfigField 'String', 'MARVEL_API_PUBLIC_KEY', marvelApiPublicKey
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    // ConstraintLayout
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"

    // Rx
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"

    // Butterknife
    implementation "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"

    // dagger
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    implementation "com.google.dagger:dagger-android:$rootProject.dagger2Version"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.dagger2Version"

    // Picasso
    implementation "com.squareup.picasso:picasso:$rootProject.picassoVersion"

    // Retrofit2
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"

    // Room
    implementation "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.roomVersion"

    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    // Mockito
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.testRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"

    // Google Ads
    implementation "com.google.android.gms:play-services-ads:$rootProject.ext.playServicesAdsVersion"

}
